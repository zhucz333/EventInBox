cmake_minimum_required (VERSION 3.13)

Project(Test CXX)

FILE(GLOB_RECURSE TEST_HEADERS *.h)
AUX_SOURCE_DIRECTORY(. TEST_SRCS)

SOURCE_GROUP("Include" FILES ${TEST_HEADERS}) 
SOURCE_GROUP("Src" FILES ${TEST_SRCS})

SET(TARGETBIN Test)
SET(EVENT_IN_BOX_LIB "EventInBox64$<$<CONFIG:Debug>:D>")

ADD_EXECUTABLE(${TARGETBIN} ${TEST_SRCS} ${TEST_HEADERS})

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")
	
	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -pthread")
	
	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()

ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")
	
	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

SET_TARGET_PROPERTIES(${TARGETBIN} PROPERTIES OUTPUT_NAME "${TARGETBIN}${ARCH}$<$<CONFIG:Debug>:D>")
TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${INC_PATH})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${LIB_PATH})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${BOOST_LIB_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${DISRUPTOR_LIB_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB_DIR})
TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${EVENT_IN_BOX_LIB})
TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${DISRUPTOR_LIB})
TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB})
