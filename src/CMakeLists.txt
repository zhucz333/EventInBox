cmake_minimum_required (VERSION 3.13)

Project(EventInBox CXX)

FILE(GLOB_RECURSE INBOX_HEADERS *.h)
AUX_SOURCE_DIRECTORY(. INBOX_SRCS)

SOURCE_GROUP("Include" FILES ${INBOX_HEADERS}) 
SOURCE_GROUP("Src" FILES ${INBOX_SRCS})

SET(TARGETBIN EventInBox)

SET(INC_PATH ${PROJECT_SOURCE_DIR}/../include)
SET(LIB_PATH ${PROJECT_SOURCE_DIR}/../lib)
SET(BIN_PATH ${PROJECT_SOURCE_DIR}/../bin)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_PATH})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_PATH})

ADD_DEFINITIONS(-DLIB_INBOX_EXPORT)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)

SET(BOOST_DIR ${PROJECT_SOURCE_DIR}/../../../../boost/boost_1_70_0)
SET(BOOST_LIB_DIR ${BOOST_DIR}/stage/lib)

SET(3rd_DIR ${PROJECT_SOURCE_DIR}/../../)
SET(DISRUPTOR_DIR ${3rd_DIR}/Disruptor)
SET(DISRUPTOR_INC_DIR ${DISRUPTOR_DIR}/include)
SET(DISRUPTOR_LIB_DIR ${DISRUPTOR_DIR}/lib)

SET(MTHREAD_DIR ${3rd_DIR}/MThread)
SET(MTHREAD_INC_DIR ${MTHREAD_DIR}/include)
SET(MTHREAD_LIB_DIR ${MTHREAD_DIR}/lib)

SET(DISRUPTOR_LIB "Disruptor64$<$<CONFIG:Debug>:D>")
SET(MTHREAD_LIB "MTHREAD64$<$<CONFIG:Debug>:D>")

ADD_LIBRARY(${TARGETBIN} STATIC ${INBOX_HEADERS} ${INBOX_SRCS})

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")
	
	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -pthread")
	
	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()

ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")
	
	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

SET_TARGET_PROPERTIES(${TARGETBIN} PROPERTIES OUTPUT_NAME "${TARGETBIN}64$<$<CONFIG:Debug>:D>")
TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${DISRUPTOR_INC_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${DISRUPTOR_LIB_DIR})
TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_INC_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB_DIR})
TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${BOOST_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${BOOST_LIB_DIR})


TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${DISRUPTOR_LIB})
TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB})

FILE(COPY IEventInBox.h IEvent.h IEventHandler.h DESTINATION ${INC_PATH})

ADD_SUBDIRECTORY(test)